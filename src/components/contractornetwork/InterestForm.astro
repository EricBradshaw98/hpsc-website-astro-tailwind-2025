---
export interface InterestFormProps {
	heading: string;
	description: string;
	sectorOptions: Array<{
		value: string;
		label: string;
	}>;
	turnstileSiteKey: string;
}

interface Props extends InterestFormProps {}

const { heading, description, sectorOptions, turnstileSiteKey } = Astro.props;

// WordPress ACF Mapping:
// ACF Group: interest_form
// - heading (Text)
// - description (Textarea)
// - sector_options (Repeater: value, label)
// - turnstile_site_key (Text - from site options)
---

<section class="mb-16">
	<div class="bg-white rounded-2xl shadow-lg p-8 md:p-12">
		<h2 class="text-3xl font-bold text-gray-900 mb-4">{heading}</h2>
		<p class="text-gray-700 mb-8">{description}</p>

		<form id="interest-form" class="space-y-6">
			<!-- Name Fields -->
			<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
				<div>
					<label for="first-name" class="block text-sm font-semibold text-gray-900 mb-2">
						First Name <span class="text-red-500">*</span>
					</label>
					<input
						type="text"
						id="first-name"
						name="first-name"
						required
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
					/>
				</div>
				<div>
					<label for="last-name" class="block text-sm font-semibold text-gray-900 mb-2">
						Last Name <span class="text-red-500">*</span>
					</label>
					<input
						type="text"
						id="last-name"
						name="last-name"
						required
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
					/>
				</div>
			</div>

			<!-- Email -->
			<div>
				<label for="email" class="block text-sm font-semibold text-gray-900 mb-2">
					Email <span class="text-red-500">*</span>
				</label>
				<input
					type="email"
					id="email"
					name="email"
					required
					class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
				/>
			</div>

			<!-- Phone -->
			<div>
				<label for="phone" class="block text-sm font-semibold text-gray-900 mb-2">
					Phone Number <span class="text-red-500">*</span>
				</label>
				<input
					type="tel"
					id="phone"
					name="phone"
					required
					class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
				/>
			</div>

			<!-- Company -->
			<div>
				<label for="company" class="block text-sm font-semibold text-gray-900 mb-2">
					Company Name <span class="text-red-500">*</span>
				</label>
				<input
					type="text"
					id="company"
					name="company"
					required
					class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
				/>
			</div>

			<!-- Trade/Sector -->
			<div>
				<label for="sector" class="block text-sm font-semibold text-gray-900 mb-2">
					Primary Trade/Sector <span class="text-red-500">*</span>
				</label>
				<select
					id="sector"
					name="sector"
					required
					class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
				>
					<option value="">Select a sector...</option>
					{sectorOptions.map((option) => <option value={option.value}>{option.label}</option>)}
				</select>
			</div>

			<!-- Message -->
			<div>
				<label for="interest-message" class="block text-sm font-semibold text-gray-900 mb-2">
					Additional Information
				</label>
				<textarea
					id="interest-message"
					name="message"
					rows="4"
					class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent resize-none"
				></textarea>
			</div>

			<!-- Cloudflare Turnstile -->
			<div>
				<div
					class="cf-turnstile"
					data-sitekey={turnstileSiteKey}
					data-theme="light"
					data-callback="onInterestTurnstileSuccess"
					data-error-callback="onInterestTurnstileError"
					data-expired-callback="onInterestTurnstileExpired"
				>
				</div>
			</div>

			<!-- Submit Button -->
			<button
				type="submit"
				id="submit-interest-btn"
				disabled
				class="w-full bg-primary hover:bg-primary-dark text-white font-semibold px-6 py-3 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
			>
				Submit Interest
			</button>

			<!-- Success/Error Messages -->
			<div
				id="interest-form-message"
				class="hidden p-4 rounded-lg text-sm font-medium"
				role="alert"
				aria-live="polite"
				aria-atomic="true"
			>
			</div>
		</form>
	</div>
</section>

<!-- Cloudflare Turnstile Script -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

<script>
	let interestTurnstileToken: string | null = null;

	// Check if all required fields are filled
	function areInterestFieldsFilled(): boolean {
		const firstName = (document.getElementById('first-name') as HTMLInputElement)?.value.trim();
		const lastName = (document.getElementById('last-name') as HTMLInputElement)?.value.trim();
		const email = (document.getElementById('email') as HTMLInputElement)?.value.trim();
		const phone = (document.getElementById('phone') as HTMLInputElement)?.value.trim();
		const company = (document.getElementById('company') as HTMLInputElement)?.value.trim();
		const sector = (document.getElementById('sector') as HTMLSelectElement)?.value;

		return !!(firstName && lastName && email && phone && company && sector);
	}

	// Update submit button state
	function updateInterestSubmitButton() {
		const submitButton = document.getElementById('submit-interest-btn') as HTMLButtonElement;
		if (submitButton) {
			submitButton.disabled = !(areInterestFieldsFilled() && interestTurnstileToken);
		}
	}

	// Turnstile callbacks
	(window as any).onInterestTurnstileSuccess = function (token: string) {
		interestTurnstileToken = token;
		updateInterestSubmitButton();
	};

	(window as any).onInterestTurnstileError = function () {
		interestTurnstileToken = null;
		updateInterestSubmitButton();
	};

	(window as any).onInterestTurnstileExpired = function () {
		interestTurnstileToken = null;
		updateInterestSubmitButton();
	};

	// Form field change listeners
	const interestFormFields = ['first-name', 'last-name', 'email', 'phone', 'company', 'sector'];
	interestFormFields.forEach((fieldId) => {
		document.getElementById(fieldId)?.addEventListener('input', updateInterestSubmitButton);
		document.getElementById(fieldId)?.addEventListener('change', updateInterestSubmitButton);
	});

	// Form submission
	document.getElementById('interest-form')?.addEventListener('submit', async (e) => {
		e.preventDefault();

		if (!interestTurnstileToken) {
			return;
		}

		const submitButton = document.getElementById('submit-interest-btn') as HTMLButtonElement;
		const messageDiv = document.getElementById('interest-form-message');

		submitButton.disabled = true;
		submitButton.textContent = 'Submitting...';

		const formData = new FormData(e.target as HTMLFormElement);
		formData.append('cf-turnstile-response', interestTurnstileToken);

		try {
			// TODO: Replace with actual API endpoint for form submission
			// const response = await fetch('/api/interest', {
			//   method: 'POST',
			//   body: formData
			// });
			// if (!response.ok) throw new Error('Submission failed');

			// Simulate form submission (replace with actual endpoint)
			await new Promise((resolve) => setTimeout(resolve, 1000));

			// Success
			if (messageDiv) {
				messageDiv.className =
					'p-4 rounded-lg text-sm font-medium bg-green-50 text-green-800 border border-green-200';
				messageDiv.textContent =
					'Thank you for your interest! We will send you more information about the HPCN program shortly.';
				messageDiv.classList.remove('hidden');
			}

			// Reset form
			(e.target as HTMLFormElement).reset();
			interestTurnstileToken = null;
			submitButton.textContent = 'Submit Interest';
		} catch {
			// Error
			if (messageDiv) {
				messageDiv.className =
					'p-4 rounded-lg text-sm font-medium bg-red-50 text-red-800 border border-red-200';
				messageDiv.textContent =
					'There was an error submitting your interest. Please try again or contact us directly.';
				messageDiv.classList.remove('hidden');
			}
			submitButton.disabled = false;
			submitButton.textContent = 'Submit Interest';
		}
	});
</script>
