---
export interface StrategyHeroProps {
	badge: {
		icon: string; // SVG path
		text: string;
	};
	title: string;
	description: string;
	note: {
		icon: string; // SVG path
		text: string;
	};
	visualCards: Array<{
		icon: string; // SVG path
		label: string;
		color: 'primary' | 'blue' | 'green' | 'orange';
	}>;
}

interface Props extends StrategyHeroProps {}

const { badge, title, description, note, visualCards } = Astro.props;

// WordPress ACF Mapping:
// ACF Group: strategy_hero
// - badge_icon (Text - SVG path)
// - badge_text (Text)
// - hero_title (Text)
// - hero_description (Textarea)
// - note_icon (Text - SVG path)
// - note_text (Text)
// - visual_cards (Repeater) -> icon, label, color

const colorMap = {
	primary: 'bg-primary/10 text-primary',
	blue: 'bg-blue/10 text-blue',
	green: 'bg-green/10 text-green',
	orange: 'bg-orange/10 text-orange',
};
---

<div class="mb-16 relative">
	<div class="absolute inset-0 bg-gradient-to-br from-primary/5 via-blue/5 to-green/5 rounded-3xl -z-10">
	</div>
	<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center p-8 md:p-12">
		<div>
			<div
				class="inline-flex items-center gap-2 px-4 py-2 bg-primary/10 text-primary rounded-full text-sm font-semibold mb-4"
			>
				<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={badge.icon} />
				</svg>
				{badge.text}
			</div>
			<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 leading-tight">
				{title}
			</h1>
			<div class="space-y-4">
				<p class="text-xl text-gray-700 leading-relaxed">{description}</p>
				<p class="text-lg text-gray-600 flex items-start gap-2">
					<svg class="w-6 h-6 text-primary flex-shrink-0 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={note.icon} />
					</svg>
					<span set:html={note.text} />
				</p>
			</div>
		</div>
		<div class="hidden lg:block">
			<div class="relative">
				<!-- Decorative circles -->
				<div class="absolute top-0 right-0 w-72 h-72 bg-primary/10 rounded-full blur-3xl"></div>
				<div class="absolute bottom-0 left-0 w-64 h-64 bg-green/10 rounded-full blur-3xl"></div>
				<!-- Strategy visualization -->
				<div class="relative grid grid-cols-2 gap-4 p-8">
					{
						visualCards.map((card, index) => (
							<div
								class={`bg-white rounded-2xl shadow-lg p-6 transform hover:scale-105 transition-transform ${index % 2 === 1 ? 'mt-8' : ''}`}
							>
								<div class={`w-12 h-12 ${colorMap[card.color]} rounded-xl flex items-center justify-center mb-3`}>
									<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={card.icon} />
									</svg>
								</div>
								<p class="text-sm font-semibold text-gray-700">{card.label}</p>
							</div>
						))
					}
				</div>
			</div>
		</div>
	</div>
</div>
