---
import { Image } from 'astro:assets';
import logo from '../../assets/HPSC_Logo2024.png';

export interface NavLink {
	label: string;
	href: string;
	children?: NavLink[];
}

const navLinks: NavLink[] = [
	{
		label: 'About',
		href: '/coming-soon',
		children: [
			{ label: 'About the HPSC', href: '/coming-soon' },
			{ label: 'Strategy', href: '/coming-soon' },
			{ label: 'Our Team', href: '/about/our-team' },
			{ label: 'Get Involved', href: '/coming-soon' },
		],
	},
	{
		label: 'Contractor Network',
		href: '/coming-soon',
		children: [
			{ label: 'About the Network', href: '/coming-soon' },
			{ label: 'The Big Picture', href: '/coming-soon' },
			{ label: 'Find a Contractor', href: '/contractor-network/find-a-contractor' },
		],
	},
	{
		label: 'Resources',
		href: '/coming-soon',
		children: [
			{ label: 'All Resources', href: '/coming-soon' },
			{ label: 'News & Updates', href: '/resources/news' },
			{ label: 'Documents', href: '/resources/documents' },
			{ label: 'Guides', href: '/resources/guides' },
			{ label: 'Training', href: '/coming-soon' },
			{ label: 'Events', href: '/coming-soon' },
		],
	},
	{
		label: 'Contact Us',
		href: '/contact',
	},
];

// Get current path for active link detection
const currentPath = Astro.url.pathname;

// Function to check if link is active
function isActive(href: string): boolean {
	if (href === '/') {
		return currentPath === '/';
	}
	return currentPath.startsWith(href);
}
---

<!-- Top Contact Bar - Hidden on mobile, hides on scroll down, shows when at top -->
<div
	id="top-bar"
	class="hidden lg:block bg-gray-100 border-b border-gray-200 transition-transform duration-300"
>
	<div class="container mx-auto px-4 py-2 max-w-7xl">
		<div class="flex items-center justify-end gap-6 text-sm">
			<a
				href="tel:+16047553469"
				class="flex items-center gap-2 text-gray-700 hover:text-primary transition-colors"
			>
				<svg
					class="w-4 h-4"
					fill="none"
					stroke="currentColor"
					viewBox="0 0 24 24"
					aria-hidden="true"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
					></path>
				</svg>
				(604) 755-3469
			</a>
			<a
				href="mailto:info@homeperformance.ca"
				class="flex items-center gap-2 text-gray-700 hover:text-primary transition-colors"
			>
				<svg
					class="w-4 h-4"
					fill="none"
					stroke="currentColor"
					viewBox="0 0 24 24"
					aria-hidden="true"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
					></path>
				</svg>
				info@homeperformance.ca
			</a>
		</div>
	</div>
</div>

<header class="bg-white shadow-md sticky top-0 z-50">
	<div class="container mx-auto px-4 py-4 max-w-7xl">
		<div class="flex items-center justify-between">
			<!-- Logo -->
			<div class="flex-shrink-0">
				<a href="/" class="flex items-center">
					<Image
						src={logo}
						alt="HPSC Logo"
						class="h-12 w-auto"
						width={200}
						height={48}
						transition:persist="logo"
					/>
				</a>
			</div>

			<!-- Mobile Menu Button -->
			<button
				id="mobile-menu-button"
				class="lg:hidden flex flex-col gap-2 w-8 h-8 justify-center items-center"
				aria-label="Toggle menu"
			>
				<span class="hamburger-line w-6 h-0.5 bg-primary transition-all duration-500 ease-in-out"
				></span>
				<span class="hamburger-line w-6 h-0.5 bg-primary transition-all duration-500 ease-in-out"
				></span>
			</button>

			<!-- Desktop Navigation -->
			<div class="hidden lg:flex lg:items-center gap-8">
				<nav id="main-navigation" aria-label="Main navigation">
					<ul class="flex items-center gap-6">
						{
							navLinks.map((link) => (
								<li class="relative group">
									<a
										href={link.href}
										class={`font-medium transition-colors block py-2 ${
											isActive(link.href)
												? 'text-primary border-b-2 border-primary'
												: 'text-gray-700 hover:text-primary'
										}`}
									>
										{link.label}
									</a>
									{link.children && (
										<ul class="absolute top-full left-0 bg-white shadow-lg rounded-md py-2 min-w-[200px] opacity-0 invisible translate-y-2 group-hover:opacity-100 group-hover:visible group-hover:translate-y-0 transition-all duration-300 ease-out">
											{link.children.map((child) => (
												<li>
													<a
														href={child.href}
														class={`block px-4 py-2 transition-colors ${
															isActive(child.href)
																? 'bg-primary text-white'
																: 'text-gray-600 hover:bg-primary hover:text-white'
														}`}
													>
														{child.label}
													</a>
												</li>
											))}
										</ul>
									)}
								</li>
							))
						}
					</ul>
				</nav>

				<!-- Search Bar -->
				<form action="/search" method="get" class="relative">
					<label for="desktop-search" class="sr-only">Search the site</label>
					<input
						id="desktop-search"
						type="search"
						name="q"
						placeholder="Search..."
						aria-label="Search the site"
						class="pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent w-48"
					/>
					<button
						type="submit"
						class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-primary transition-colors"
						aria-label="Submit search"
					>
						<svg
							class="w-5 h-5"
							fill="none"
							stroke="currentColor"
							viewBox="0 0 24 24"
							aria-hidden="true"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
						</svg>
					</button>
				</form>
			</div>
		</div>

		<!-- Mobile Menu -->
		<nav
			id="mobile-menu"
			class="lg:hidden overflow-hidden transition-all duration-300 ease-in-out max-h-0 opacity-0"
		>
			<ul class="flex flex-col gap-4 pt-4">
				{
					navLinks.map((link, index) => (
						<li>
							<div class="flex items-center justify-between">
								<a
									href={link.href}
									class={`font-medium transition-colors block py-2 flex-grow ${
										isActive(link.href)
											? 'text-primary border-l-4 border-primary pl-2'
											: 'text-gray-700 hover:text-primary'
									}`}
								>
									{link.label}
								</a>
								{link.children && (
									<button
										class="mobile-submenu-toggle p-2 text-gray-600 hover:text-primary transition-colors"
										data-submenu={`submenu-${index}`}
										aria-label={`Toggle ${link.label} submenu`}
									>
										<svg
											class="w-5 h-5 transition-transform duration-300"
											fill="none"
											stroke="currentColor"
											viewBox="0 0 24 24"
											aria-hidden="true"
										>
											<path
												stroke-linecap="round"
												stroke-linejoin="round"
												stroke-width="2"
												d="M19 9l-7 7-7-7"
											/>
										</svg>
									</button>
								)}
							</div>
							{link.children && (
								<ul
									id={`submenu-${index}`}
									class="ml-4 space-y-2 overflow-hidden transition-all duration-300 max-h-0 opacity-0"
								>
									{link.children.map((child) => (
										<li>
											<a
												href={child.href}
												class={`block py-1 transition-colors ${
													isActive(child.href)
														? 'text-primary font-medium'
														: 'text-gray-600 hover:text-primary'
												}`}
											>
												{child.label}
											</a>
										</li>
									))}
								</ul>
							)}
						</li>
					))
				}
				<li class="pt-2 border-t border-gray-200">
					<form action="/search" method="get" class="relative">
						<label for="mobile-search" class="sr-only">Search the site</label>
						<input
							id="mobile-search"
							type="search"
							name="q"
							placeholder="Search..."
							aria-label="Search the site"
							class="pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent w-full"
						/>
						<button
							type="submit"
							class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-primary transition-colors"
							aria-label="Submit search"
						>
							<svg
								class="w-5 h-5"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
								aria-hidden="true"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</button>
					</form>
				</li>
			</ul>
		</nav>
	</div>
</header>

<script>
	// Top bar scroll behavior
	let lastScrollTop = 0;
	const topBar = document.getElementById('top-bar');

	window.addEventListener('scroll', () => {
		const scrollTop = window.scrollY || document.documentElement.scrollTop;

		if (scrollTop > 50 && scrollTop > lastScrollTop) {
			// Scrolling down and past threshold
			topBar?.classList.add('-translate-y-full');
		} else if (scrollTop < 10) {
			// At very top
			topBar?.classList.remove('-translate-y-full');
		}

		lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
	});

	// Mobile menu toggle with hamburger animation
	const mobileMenuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');
	const hamburgerLines = mobileMenuButton?.querySelectorAll('.hamburger-line');
	let isMenuOpen = false;

	mobileMenuButton?.addEventListener('click', () => {
		isMenuOpen = !isMenuOpen;

		if (isMenuOpen) {
			// Open menu - smooth dropdown
			mobileMenu?.classList.remove('max-h-0', 'opacity-0');
			mobileMenu?.classList.add('max-h-[800px]', 'opacity-100');

			// Transform hamburger to X with 90 degree rotation first
			if (hamburgerLines) {
				// First line: rotate 90deg, then rotate to 45deg and move down
				hamburgerLines[0].style.transform = 'rotate(135deg) translateY(5px) translateX(5px)';
				// Second line: rotate 90deg, then rotate to -45deg and move up
				hamburgerLines[1].style.transform = 'rotate(-135deg) translateY(-5px) translateX(5px)';
			}
		} else {
			// Close menu - smooth slide up
			mobileMenu?.classList.remove('max-h-[800px]', 'opacity-100');
			mobileMenu?.classList.add('max-h-0', 'opacity-0');

			// Back to hamburger
			if (hamburgerLines) {
				hamburgerLines[0].style.transform = 'rotate(0) translateY(0)';
				hamburgerLines[1].style.transform = 'rotate(0) translateY(0)';
			}

			// Close all submenus when main menu closes
			const allSubmenus = document.querySelectorAll('[id^="submenu-"]');
			const allToggleButtons = document.querySelectorAll('.mobile-submenu-toggle');
			allSubmenus.forEach((submenu) => {
				submenu.classList.remove('max-h-96', 'opacity-100', 'mt-2');
				submenu.classList.add('max-h-0', 'opacity-0');
			});
			allToggleButtons.forEach((button) => {
				const svg = button.querySelector('svg');
				if (svg) svg.style.transform = 'rotate(0deg)';
			});
		}
	});

	// Mobile submenu toggles
	const submenuToggles = document.querySelectorAll('.mobile-submenu-toggle');
	submenuToggles.forEach((toggle) => {
		toggle.addEventListener('click', (e) => {
			e.preventDefault();
			const submenuId = toggle.getAttribute('data-submenu');
			const submenu = document.getElementById(submenuId || '');
			const svg = toggle.querySelector('svg');

			if (submenu) {
				const isOpen = submenu.classList.contains('max-h-96');

				if (isOpen) {
					// Close submenu
					submenu.classList.remove('max-h-96', 'opacity-100', 'mt-2');
					submenu.classList.add('max-h-0', 'opacity-0');
					if (svg) svg.style.transform = 'rotate(0deg)';
				} else {
					// Open submenu
					submenu.classList.remove('max-h-0', 'opacity-0');
					submenu.classList.add('max-h-96', 'opacity-100', 'mt-2');
					if (svg) svg.style.transform = 'rotate(180deg)';
				}
			}
		});
	});
</script>
