<!-- Accessibility Tab component that slides out on hover --><!-- TODO: Re-enable on mobile with better UX (currently hidden on mobile) -->
<div class="accessibility-tab-container fixed left-0 top-1/2 -translate-y-1/2 z-50 hidden md:block">
	<div
		id="accessibility-tab-wrapper"
		class="accessibility-tab-wrapper group flex items-center transition-transform duration-300 md:hover:translate-x-0"
		style="transform: translateX(calc(-100% + 48px));"
	>
		<!-- Tab Content Panel -->
		<div
			id="accessibility-tab-panel"
			class="bg-gray-900 text-white p-6 rounded-r-lg shadow-2xl w-80 max-w-[calc(100vw-48px)] transition-opacity duration-300 border-2 border-white overflow-hidden"
			style="opacity: 0;"
		>
			<h2 class="text-xl font-bold mb-4 flex items-center gap-2">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					aria-hidden="true"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
					></path>
				</svg>
				Accessibility Options
			</h2>

			<!-- Font Size Controls -->
			<div class="mb-4">
				<label class="block text-sm font-medium mb-2">Text Size</label>
				<div class="flex gap-2">
					<button
						id="decrease-font"
						class="px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded transition-colors flex-1"
						aria-label="Decrease text size"
					>
						A-
					</button>
					<button
						id="reset-font"
						class="px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded transition-colors flex-1"
						aria-label="Reset text size"
					>
						A
					</button>
					<button
						id="increase-font"
						class="px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded transition-colors flex-1"
						aria-label="Increase text size"
					>
						A+
					</button>
				</div>
			</div>

			<!-- High Contrast Toggle -->
			<div class="mb-4">
				<label class="flex items-center justify-between cursor-pointer">
					<span class="text-sm font-medium">High Contrast</span>
					<div class="relative flex-shrink-0">
						<!-- only the input is the peer -->
						<input
							type="checkbox"
							id="high-contrast"
							class="sr-only peer"
							aria-label="Enable high contrast"
						/>
						<!-- track: relative, knob via ::after -->
						<div
							class="w-11 h-6 rounded-full bg-gray-700 peer-focus:outline-none transition-colors duration-200
                     relative peer-checked:bg-primary
                     after:content-[''] after:absolute after:h-5 after:w-5 after:top-0.5 after:left-0.5
                     after:bg-white after:border after:border-gray-300 after:rounded-full after:transition-transform after:duration-200
                     peer-checked:after:translate-x-5 peer-checked:after:border-white"
						>
						</div>
					</div>
				</label>
			</div>

			<!-- Line Height Toggle -->
			<div class="mb-4">
				<label class="flex items-center justify-between cursor-pointer">
					<span class="text-sm font-medium">Increased Line Height</span>
					<div class="relative flex-shrink-0">
						<input
							type="checkbox"
							id="line-height"
							class="sr-only peer"
							aria-label="Increase line height"
						/>
						<div
							class="w-11 h-6 rounded-full bg-gray-700 peer-focus:outline-none transition-colors duration-200
                     relative peer-checked:bg-primary
                     after:content-[''] after:absolute after:h-5 after:w-5 after:top-0.5 after:left-0.5
                     after:bg-white after:border after:border-gray-300 after:rounded-full after:transition-transform after:duration-200
                     peer-checked:after:translate-x-5 peer-checked:after:border-white"
						>
						</div>
					</div>
				</label>
			</div>

			<!-- Letter Spacing Toggle -->
			<div class="mb-4">
				<label class="flex items-center justify-between cursor-pointer">
					<span class="text-sm font-medium">Letter Spacing</span>
					<div class="relative flex-shrink-0">
						<input
							type="checkbox"
							id="letter-spacing"
							class="sr-only peer"
							aria-label="Enable letter spacing"
						/>
						<div
							class="w-11 h-6 rounded-full bg-gray-700 peer-focus:outline-none transition-colors duration-200
                     relative peer-checked:bg-primary
                     after:content-[''] after:absolute after:h-5 after:w-5 after:top-0.5 after:left-0.5
                     after:bg-white after:border after:border-gray-300 after:rounded-full after:transition-transform after:duration-200
                     peer-checked:after:translate-x-5 peer-checked:after:border-white"
						>
						</div>
					</div>
				</label>
			</div>

			<!-- Reduce Motion Toggle -->
			<div class="mb-4">
				<label class="flex items-center justify-between cursor-pointer">
					<span class="text-sm font-medium">Reduce Motion</span>
					<div class="relative flex-shrink-0">
						<input
							type="checkbox"
							id="reduce-motion"
							class="sr-only peer"
							aria-label="Reduce motion"
						/>
						<div
							class="w-11 h-6 rounded-full bg-gray-700 peer-focus:outline-none transition-colors duration-200
                     relative peer-checked:bg-primary
                     after:content-[''] after:absolute after:h-5 after:w-5 after:top-0.5 after:left-0.5
                     after:bg-white after:border after:border-gray-300 after:rounded-full after:transition-transform after:duration-200
                     peer-checked:after:translate-x-5 peer-checked:after:border-white"
						>
						</div>
					</div>
				</label>
			</div>

			<!-- Reset All Button -->
			<button
				id="reset-all"
				class="w-full px-4 py-2 bg-primary-dark hover:bg-primary-900 text-white rounded transition-colors font-medium"
			>
				Reset All Settings
			</button>
		</div>

		<!-- Tab Handle -->
		<div
			class="bg-primary-dark text-white px-4 py-8 rounded-r-lg shadow-2xl cursor-pointer flex items-center border-r-4 border-white tab-handle"
			role="button"
			aria-label="Open Accessibility Options"
			tabindex="0"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-8 w-8"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
				aria-hidden="true"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
				></path>
			</svg>
		</div>
	</div>
</div>

<script>
	// Initialize accessibility controls after DOM is ready
	function initializeAccessibilityControls() {
		// Font size control
		let fontSize = 16;
		const htmlElement = document.documentElement;

		document.getElementById('increase-font')?.addEventListener('click', () => {
			fontSize = Math.min(fontSize + 2, 24);
			htmlElement.style.fontSize = `${fontSize}px`;
			localStorage.setItem('fontSize', fontSize.toString());
		});

		document.getElementById('decrease-font')?.addEventListener('click', () => {
			fontSize = Math.max(fontSize - 2, 12);
			htmlElement.style.fontSize = `${fontSize}px`;
			localStorage.setItem('fontSize', fontSize.toString());
		});

		document.getElementById('reset-font')?.addEventListener('click', () => {
			fontSize = 16;
			htmlElement.style.fontSize = `${fontSize}px`;
			localStorage.setItem('fontSize', fontSize.toString());
		});

		// High contrast toggle
		const highContrastToggle = document.getElementById('high-contrast');
		highContrastToggle?.addEventListener('change', () => {
			if ((highContrastToggle as HTMLInputElement).checked) {
				document.body.classList.add('high-contrast');
				localStorage.setItem('highContrast', 'true');
			} else {
				document.body.classList.remove('high-contrast');
				localStorage.setItem('highContrast', 'false');
			}
		});

		// Line height toggle
		const lineHeightToggle = document.getElementById('line-height');
		lineHeightToggle?.addEventListener('change', () => {
			if ((lineHeightToggle as HTMLInputElement).checked) {
				document.body.classList.add('increased-line-height');
				localStorage.setItem('lineHeight', 'true');
			} else {
				document.body.classList.remove('increased-line-height');
				localStorage.setItem('lineHeight', 'false');
			}
		});

		// Letter spacing toggle
		const letterSpacingToggle = document.getElementById('letter-spacing');
		letterSpacingToggle?.addEventListener('change', () => {
			if ((letterSpacingToggle as HTMLInputElement).checked) {
				document.body.classList.add('increased-letter-spacing');
				localStorage.setItem('letterSpacing', 'true');
			} else {
				document.body.classList.remove('increased-letter-spacing');
				localStorage.setItem('letterSpacing', 'false');
			}
		});

		// Reduce motion toggle
		const reduceMotionToggle = document.getElementById('reduce-motion');
		reduceMotionToggle?.addEventListener('change', () => {
			if ((reduceMotionToggle as HTMLInputElement).checked) {
				document.body.classList.add('reduce-motion');
				localStorage.setItem('reduceMotion', 'true');
			} else {
				document.body.classList.remove('reduce-motion');
				localStorage.setItem('reduceMotion', 'false');
			}
			// Dispatch event to notify other parts of the app if needed
			window.dispatchEvent(new CustomEvent('reduce-motion-changed'));
		});

		// Reset all settings
		document.getElementById('reset-all')?.addEventListener('click', () => {
			fontSize = 16;
			htmlElement.style.fontSize = '16px';
			document.body.classList.remove(
				'high-contrast',
				'increased-line-height',
				'increased-letter-spacing',
				'reduce-motion'
			);

			const inputs = ['high-contrast', 'line-height', 'letter-spacing', 'reduce-motion'];
			inputs.forEach((id) => {
				const el = document.getElementById(id) as HTMLInputElement | null;
				if (el) el.checked = false;
			});

			localStorage.removeItem('fontSize');
			localStorage.removeItem('highContrast');
			localStorage.removeItem('lineHeight');
			localStorage.removeItem('letterSpacing');
			localStorage.removeItem('reduceMotion');

			// notify reduce-motion listeners
			window.dispatchEvent(new CustomEvent('reduce-motion-changed'));
		});

		// Mobile tap support for accessibility tab
		const tabWrapper = document.getElementById('accessibility-tab-wrapper');
		const tabPanel = document.getElementById('accessibility-tab-panel');
		const tabHandle = document.querySelector('.tab-handle');
		let isTabOpen = false;

		function openTab() {
			tabWrapper?.style.setProperty('transform', 'translateX(0)');
			if (tabPanel) tabPanel.style.opacity = '1';
			isTabOpen = true;
		}
		function closeTab() {
			tabWrapper?.style.setProperty('transform', 'translateX(calc(-100% + 48px))');
			if (tabPanel) tabPanel.style.opacity = '0';
			isTabOpen = false;
		}

		tabHandle?.addEventListener('click', (e) => {
			e.stopPropagation();
			if (isTabOpen) closeTab();
			else openTab();
		});

		// keyboard accessibility for handle
		tabHandle?.addEventListener('keydown', (e) => {
			if (e.key === 'Enter' || e.key === ' ') {
				e.preventDefault();
				if (isTabOpen) closeTab();
				else openTab();
			}
		});

		// Close tab when clicking outside on mobile
		document.addEventListener('click', (e) => {
			const target = e.target as HTMLElement;
			if (isTabOpen && !target.closest('.accessibility-tab-wrapper')) {
				closeTab();
			}
		});

		// Load saved preferences function
		function loadAccessibilitySettings() {
			const savedFontSize = localStorage.getItem('fontSize');
			if (savedFontSize) {
				fontSize = parseInt(savedFontSize);
				htmlElement.style.fontSize = `${fontSize}px`;
			}

			const savedHighContrast = localStorage.getItem('highContrast');
			if (savedHighContrast === 'true') {
				document.body.classList.add('high-contrast');
				const hc = document.getElementById('high-contrast') as HTMLInputElement | null;
				if (hc) hc.checked = true;
			}

			const savedLineHeight = localStorage.getItem('lineHeight');
			if (savedLineHeight === 'true') {
				document.body.classList.add('increased-line-height');
				const lh = document.getElementById('line-height') as HTMLInputElement | null;
				if (lh) lh.checked = true;
			}

			const savedLetterSpacing = localStorage.getItem('letterSpacing');
			if (savedLetterSpacing === 'true') {
				document.body.classList.add('increased-letter-spacing');
				const ls = document.getElementById('letter-spacing') as HTMLInputElement | null;
				if (ls) ls.checked = true;
			}

			const savedReduceMotion = localStorage.getItem('reduceMotion');
			if (savedReduceMotion === 'true') {
				document.body.classList.add('reduce-motion');
				const rm = document.getElementById('reduce-motion') as HTMLInputElement | null;
				if (rm) rm.checked = true;
			}
		}

		// Load saved settings immediately
		loadAccessibilitySettings();
	}

	// Initialize on DOM ready
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initializeAccessibilityControls);
	} else {
		// DOM already loaded
		initializeAccessibilityControls();
	}

	// Also handle Astro View Transitions navigation (if used)
	document.addEventListener('astro:page-load', initializeAccessibilityControls);
</script>

<style>
	@media (min-width: 768px) {
		.accessibility-tab-wrapper:hover {
			transform: translateX(0) !important;
		}
		.accessibility-tab-wrapper:hover #accessibility-tab-panel {
			opacity: 1 !important;
		}
	}

	/* disable transitions inside the tab when reduce-motion is enabled */
	.reduce-motion .accessibility-tab-wrapper *,
	.reduce-motion .accessibility-tab-wrapper *::after {
		transition: none !important;
	}
</style>
