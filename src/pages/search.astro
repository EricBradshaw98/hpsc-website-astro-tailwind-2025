---
import Layout from '../layouts/Layout.astro';
import SearchTipCard, { type SearchTipCardProps } from '../components/search/SearchTipCard.astro';

const searchQuery = Astro.url.searchParams.get('q') || '';

const searchTips: SearchTipCardProps[] = [
	{
		title: 'Search Guides',
		description: 'Find comprehensive how-to guides on home performance topics',
		icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
		iconColor: 'primary',
	},
	{
		title: 'Browse News',
		description: 'Stay updated with the latest industry news and announcements',
		icon: 'M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z',
		iconColor: 'blue',
	},
	{
		title: 'Find Documents',
		description: 'Access downloadable resources, forms, and documentation',
		icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
		iconColor: 'green',
	},
	{
		title: 'About & Team',
		description: 'Learn about HPSC, our mission, and meet our team members',
		icon: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z',
		iconColor: 'orange',
	},
];
---

<Layout
	title={searchQuery ? `Search results for "${searchQuery}"` : 'Search'}
	description="Search the HPSC website for guides, news, documents, and more."
	keywords="search, HPSC, guides, documents, news"
	breadcrumbs={[{ label: 'Search', href: '/search' }]}
>
	<svg
		class="w-6 h-6 absolute left-4 top-1/2 -translate-y-1/2 text-gray-400"
		fill="none"
		stroke="currentColor"
		viewBox="0 0 24 24"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
	</svg>
</Layout>

<!-- Search Results Container -->
<div id="search-results" class="space-y-6">
	{
		!searchQuery && (
			<div class="bg-gray-50 rounded-xl p-8 text-center">
				<svg
					class="w-16 h-16 text-gray-400 mx-auto mb-4"
					fill="none"
					stroke="currentColor"
					viewBox="0 0 24 24"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
					/>
				</svg>
				<h2 class="text-xl font-semibold text-gray-700 mb-2">Start searching</h2>
				<p class="text-gray-600">
					Enter a search term to find guides, news articles, documents, and more.
				</p>
			</div>
		)
	}

	{
		searchQuery && (
			<div id="pagefind-results">
				<div class="text-center py-12">
					<div class="inline-block animate-spin rounded-full h-12 w-12 border-4 border-gray-300 border-t-primary" />
					<p class="mt-4 text-gray-600">Searching...</p>
				</div>
			</div>
		)
	}
</div>

<!-- Search Tips -->
{
	!searchQuery && (
		<div class="mt-12 grid grid-cols-1 md:grid-cols-2 gap-6">
			{searchTips.map((tip) => (
				<SearchTipCard {...tip} />
			))}
		</div>
	)
}

<script is:inline>
	// Load Pagefind
	async function loadPagefind() {
		if (typeof window.pagefind === 'undefined') {
			try {
				window.pagefind = await import('/pagefind/pagefind.js');
			} catch (e) {
				console.error('Failed to load Pagefind:', e);
				throw e;
			}
		}
		return window.pagefind;
	}

	// Perform search
	async function performSearch(query) {
		if (!query.trim()) {
			return;
		}

		const resultsContainer = document.getElementById('pagefind-results');
		if (!resultsContainer) return;

		try {
			const pagefind = await loadPagefind();

			// Show loading state
			resultsContainer.innerHTML = `
				<div class="text-center py-12">
					<div class="inline-block animate-spin rounded-full h-12 w-12 border-4 border-gray-300 border-t-primary"></div>
					<p class="mt-4 text-gray-600">Searching...</p>
				</div>
			`;

			const search = await pagefind.search(query);

			if (search.results.length === 0) {
				resultsContainer.innerHTML = `
					<div class="bg-gray-50 rounded-xl p-8 text-center">
						<svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
						</svg>
						<h2 class="text-xl font-semibold text-gray-700 mb-2">No results found</h2>
						<p class="text-gray-600">Try different keywords or browse our <a href="/resources/guides" class="text-primary hover:underline">guides</a> and <a href="/resources/news" class="text-primary hover:underline">news</a>.</p>
					</div>
				`;
				return;
			}

			// Display results
			const resultsHTML = await Promise.all(
				search.results.map(async (result) => {
					const data = await result.data();
					return `
						<a href="${data.url}" class="block bg-white rounded-xl p-6 border border-gray-200 hover:border-primary hover:shadow-md transition-all group" aria-label="Read more about ${data.meta?.title || 'this page'}">
							<h3 class="text-xl font-semibold text-gray-900 mb-2 group-hover:text-primary transition-colors">
								${data.meta?.title || 'Untitled'}
							</h3>
							${data.excerpt ? `<p class="text-gray-600 text-sm line-clamp-2">${data.excerpt}</p>` : ''}
							<div class="mt-3 flex items-center gap-2 text-sm text-primary font-medium">
								<span>Read more</span>
								<svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
								</svg>
							</div>
						</a>
					`;
				})
			);

			resultsContainer.innerHTML = `
				<div class="mb-4 text-sm text-gray-600">
					Found ${search.results.length} result${search.results.length === 1 ? '' : 's'}
				</div>
				<div class="space-y-4">
					${resultsHTML.join('')}
				</div>
			`;
		} catch (error) {
			console.error('Search error:', error);
			resultsContainer.innerHTML = `
				<div class="bg-red-50 rounded-xl p-8 text-center">
					<p class="text-red-700">Sorry, search is temporarily unavailable. Please try again later.</p>
				</div>
			`;
		}
	}

	// Handle search input
	const searchInput = document.getElementById('search-input');
	if (searchInput) {
		let debounceTimer;

		searchInput.addEventListener('input', (e) => {
			const query = e.target.value;

			// Update URL without reload
			const url = new URL(window.location.href);
			if (query.trim()) {
				url.searchParams.set('q', query);
			} else {
				url.searchParams.delete('q');
			}
			window.history.replaceState({}, '', url);

			// Debounce search
			clearTimeout(debounceTimer);
			debounceTimer = setTimeout(() => {
				performSearch(query);
			}, 300);
		});
	}

	// Perform initial search if query exists
	const urlParams = new URLSearchParams(window.location.search);
	const initialQuery = urlParams.get('q');
	if (initialQuery) {
		performSearch(initialQuery);
	}
</script>
