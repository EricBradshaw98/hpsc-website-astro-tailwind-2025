---
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';
import Nav from '../components/layouts/Nav.astro';
import Footer from '../components/layouts/Footer.astro';
import Breadcrumbs from '../components/layouts/Breadcrumbs.astro';
import CookieBanner from '../components/CookieBanner.astro';
import AccessibilityTab from '../components/AccessibilityTab.astro';

export interface BreadcrumbItem {
	label: string;
	href: string;
}

export interface Props {
	// SEO Meta Tags
	title: string;
	description?: string;
	canonical?: string;
	ogTitle?: string;
	ogDescription?: string;
	ogImage?: string;
	ogType?: string;
	twitterCard?: string;
	twitterTitle?: string;
	twitterDescription?: string;
	twitterImage?: string;
	keywords?: string;
	author?: string;
	robots?: string;
	// Breadcrumbs
	breadcrumbs?: BreadcrumbItem[];
	showBreadcrumbs?: boolean; // Set to false to hide breadcrumbs (e.g., homepage)
	// Layout options
	fullWidth?: boolean; // Set to true for pages with full-width sections (e.g., homepage)
}

const {
	title,
	description,
	canonical,
	ogTitle,
	ogDescription,
	ogImage,
	ogType = 'website',
	twitterCard = 'summary_large_image',
	twitterTitle,
	twitterDescription,
	twitterImage,
	keywords,
	author,
	robots = import.meta.env.PROD ? 'index, follow' : 'noindex, nofollow',
	breadcrumbs,
	showBreadcrumbs = true,
	fullWidth = false,
} = Astro.props;

const currentUrl = canonical || Astro.url.href;
const siteUrl = 'https://homeperformance.ca';
const defaultOgImage = ogImage || `${siteUrl}/og-default.jpg`;

// Auto-generate breadcrumbs from URL if not provided
function generateBreadcrumbs(pathname: string): BreadcrumbItem[] {
	const segments = pathname.split('/').filter(Boolean);
	const items: BreadcrumbItem[] = [];

	let currentPath = '';
	for (const segment of segments) {
		currentPath += `/${segment}`;
		const label = segment
			.split('-')
			.map((word) => word.charAt(0).toUpperCase() + word.slice(1))
			.join(' ');
		items.push({ label, href: currentPath });
	}

	return items;
}

const finalBreadcrumbs = breadcrumbs || generateBreadcrumbs(Astro.url.pathname);
const isHomepage = Astro.url.pathname === '/';

// Get environment variables for analytics
const GA_MEASUREMENT_ID = import.meta.env.PUBLIC_GA_MEASUREMENT_ID;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<meta name="view-transition" content="same-origin" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap"
			rel="stylesheet"
		/>

		<!-- Make env vars available to client-side scripts -->
		<script is:inline define:vars={{ GA_MEASUREMENT_ID }}>
			window.ENV = { PUBLIC_GA_MEASUREMENT_ID: GA_MEASUREMENT_ID };
		</script>

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		{description && <meta name="description" content={description} />}
		{keywords && <meta name="keywords" content={keywords} />}
		{author && <meta name="author" content={author} />}
		<meta name="robots" content={robots} />

		<!-- Canonical URL -->
		<link rel="canonical" href={currentUrl} />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content={ogType} />
		<meta property="og:url" content={currentUrl} />
		<meta property="og:title" content={ogTitle || title} />
		{
			(ogDescription || description) && (
				<meta property="og:description" content={ogDescription || description} />
			)
		}
		<meta property="og:image" content={defaultOgImage} />

		<!-- Twitter -->
		<meta name="twitter:card" content={twitterCard} />
		<meta name="twitter:url" content={currentUrl} />
		<meta name="twitter:title" content={twitterTitle || ogTitle || title} />
		{
			(twitterDescription || ogDescription || description) && (
				<meta
					name="twitter:description"
					content={twitterDescription || ogDescription || description}
				/>
			)
		}
		<meta name="twitter:image" content={twitterImage || defaultOgImage} />

		<!-- JSON-LD Schema for Organization -->
		<script
			type="application/ld+json"
			set:html={JSON.stringify({
				'@context': 'https://schema.org',
				'@type': 'Organization',
				name: 'Home Performance Stakeholder Council',
				alternateName: 'HPSC',
				url: 'https://homeperformance.ca',
				logo: 'https://homeperformance.ca/logo.png',
				description:
					'Leading the way in home performance and energy efficiency solutions across British Columbia.',
				email: 'info@homeperformance.ca',
				telephone: '+1-604-755-3469',
				address: {
					'@type': 'PostalAddress',
					addressLocality: 'Vancouver',
					addressRegion: 'BC',
					addressCountry: 'CA',
				},
				sameAs: [
					'https://facebook.com/hpsc',
					'https://twitter.com/hpsc',
					'https://linkedin.com/company/hpsc',
					'https://instagram.com/hpsc',
					'https://youtube.com/@hpsc',
				],
			})}
		/>

		<!-- JSON-LD Schema for LocalBusiness -->
		<script
			type="application/ld+json"
			set:html={JSON.stringify({
				'@context': 'https://schema.org',
				'@type': 'LocalBusiness',
				'@id': 'https://homeperformance.ca/#organization',
				name: 'Home Performance Stakeholder Council',
				alternateName: 'HPSC',
				description:
					'Leading the way in home performance and energy efficiency solutions across British Columbia.',
				url: 'https://homeperformance.ca',
				telephone: '+1-604-755-3469',
				email: 'info@homeperformance.ca',
				address: {
					'@type': 'PostalAddress',
					streetAddress: '',
					addressLocality: 'Vancouver',
					addressRegion: 'BC',
					postalCode: '',
					addressCountry: 'CA',
				},
				geo: {
					'@type': 'GeoCoordinates',
					latitude: 49.2827,
					longitude: -123.1207,
				},
				openingHoursSpecification: {
					'@type': 'OpeningHoursSpecification',
					dayOfWeek: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
					opens: '09:00',
					closes: '17:00',
				},
				priceRange: '$$',
				image: 'https://homeperformance.ca/logo.png',
			})}
		/>

		<!-- JSON-LD Schema for Website -->
		<script
			type="application/ld+json"
			set:html={JSON.stringify({
				'@context': 'https://schema.org',
				'@type': 'WebSite',
				url: 'https://homeperformance.ca',
				name: 'Home Performance Stakeholder Council',
				description:
					'Leading the way in home performance and energy efficiency solutions across British Columbia.',
				publisher: {
					'@type': 'Organization',
					name: 'Home Performance Stakeholder Council',
				},
				potentialAction: {
					'@type': 'SearchAction',
					target: 'https://homeperformance.ca/search?q={search_term_string}',
					'query-input': 'required name=search_term_string',
				},
			})}
		/>

		<!-- JSON-LD Schema for BreadcrumbList -->
		{
			finalBreadcrumbs.length > 0 && !isHomepage && (
				<script
					type="application/ld+json"
					set:html={JSON.stringify({
						'@context': 'https://schema.org',
						'@type': 'BreadcrumbList',
						itemListElement: [
							{
								'@type': 'ListItem',
								position: 1,
								name: 'Home',
								item: siteUrl,
							},
							...finalBreadcrumbs.map((crumb, idx) => ({
								'@type': 'ListItem',
								position: idx + 2,
								name: crumb.label,
								item: `${siteUrl}${crumb.href}`,
							})),
						],
					})}
				/>
			)
		}

		<!-- Astro View Transitions for smooth page navigation -->
		<ViewTransitions />

		<!-- Marker.io Feedback Widget -->
		<script is:inline>
			window.markerConfig = {
				project: '68e3e2d8b41dfc82a3e25eea',
				source: 'snippet',
			};

			!(function (e, r, _a) {
				if (!e.__Marker) {
					e.__Marker = {};
					var t = [],
						n = { __cs: t };
					([
						'show',
						'hide',
						'isVisible',
						'capture',
						'cancelCapture',
						'unload',
						'reload',
						'isExtensionInstalled',
						'setReporter',
						'clearReporter',
						'setCustomData',
						'on',
						'off',
					].forEach(function (e) {
						n[e] = function () {
							var r = Array.prototype.slice.call(arguments);
							(r.unshift(e), t.push(r));
						};
					}),
						(e.Marker = n));
					var s = r.createElement('script');
					((s.async = 1), (s.src = 'https://edge.marker.io/latest/shim.js'));
					var i = r.getElementsByTagName('script')[0];
					i.parentNode.insertBefore(s, i);
				}
			})(window, document);
		</script>

		<!-- Custom head content from pages -->
		<slot name="head" />
	</head>
	<body class="min-h-screen bg-white text-gray-900 flex flex-col">
		<!-- Skip links for accessibility -->
		<div class="skip-links">
			<a href="#main-content" class="skip-link bg-primary-dark text-white px-4 py-2 rounded">
				Skip to main content
			</a>
			<a href="#main-navigation" class="skip-link bg-primary-dark text-white px-4 py-2 rounded">
				Skip to navigation
			</a>
			<a href="#footer" class="skip-link bg-primary-dark text-white px-4 py-2 rounded">
				Skip to footer
			</a>
		</div>
		<Nav />
		<main id="main-content" class="flex-grow">
			{
				fullWidth ? (
					<>
						{showBreadcrumbs && !isHomepage && finalBreadcrumbs.length > 0 && (
							<div class="container mx-auto px-4 max-w-7xl">
								<Breadcrumbs items={finalBreadcrumbs} />
							</div>
						)}
						<slot />
					</>
				) : (
					<div class="container mx-auto px-4 py-8 max-w-7xl">
						{showBreadcrumbs && !isHomepage && finalBreadcrumbs.length > 0 && (
							<Breadcrumbs items={finalBreadcrumbs} />
						)}
						<slot />
					</div>
				)
			}
		</main>
		<Footer />
		<CookieBanner />
		<AccessibilityTab />
	</body>
</html>
